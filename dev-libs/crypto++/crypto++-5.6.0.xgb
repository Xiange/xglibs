#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Crypto++ is a C++ class library of cryptographic schemes"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://cryptopp.com"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://cryptopp.com/cryptopp560.zip
http://mirror.nus.edu.sg/pub/gentoo-portage/dev-libs/crypto++/files/crypto++-5.6.0-fix_build_system.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND} unzip"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	mkdir source
	cd source

	echo "Unpacking to `pwd`"
	unzip $XGPATH_SOURCE/`basename $SRC_URI`
	err_check "uncompress $N-$V failed."

	#patch it.
	patch -p0 -i $XGPATH_SOURCE/crypto++-5.6.0-fix_build_system.patch

}

#config
xgb_config()
{
	return 0
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#optimize..
	#export CFLAGS="-march=native -mtune=native -O1"
	export CFLAGS="-O1"
	export CXXFLAGS="$CFLAGS"


	#run make in current directory
	make -f GNUmakefile  CXXFLAGS="$CXXFLAGS"
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make -f GNUmakefile CXXFLAGS="$CXXFLAGS" test

	err_check "Crypto++ self-test failed. Try to remove some optimization and retry"
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST  install
}


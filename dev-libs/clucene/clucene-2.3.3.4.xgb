#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="High-performance, full-featured text search engine based off of lucene in C++"


# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://clucene.sourceforge.net/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://downloads.sourceforge.net/clucene/clucene-core-$V.tar.gz \
http://www.linuxfromscratch.org/patches/blfs/7.5/clucene-2.3.3.4-contribs_lib-1.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="boost"

# Build time depend
DEPEND="${RDEPEND} cmake"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/clucene-core-$V$R.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-core-$V$R
	err_check "enter directory failed."

	patch -Np1 -i $XGPATH_SOURCE/clucene-2.3.3.4-contribs_lib-1.patch
	err_check "patch failed."

	mkdir build
	cd build
	err_check "cd failed."

	cmake -DCMAKE_INSTALL_PREFIX=/usr \
	      -DBUILD_CONTRIBS_LIB=ON ..

}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
}


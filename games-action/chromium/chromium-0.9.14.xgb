#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="This is a sample skeleton xiange build script file"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://foo.bar.com/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://downloads.sourceforge.net/project/chromium-bsu/Chromium%20B.S.U.%20source%20code/$V/chromium-bsu-$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/`basename $SRC_URI`
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd chromium-bsu-$V

	#patch to remove compile bug.
	sed -i "s/alutCreateBufferFromFile(const_cast<ALbyte\*>(filename))/alutCreateBufferFromFile((filename))/" src/AudioOpenAL.cpp
	err_check "patch $N-$V failed."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --disable-glc --disable-sdl --disable-sdlimage \
	 --disable-sdlmixer "

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
}


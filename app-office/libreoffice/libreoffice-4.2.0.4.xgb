#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="LibreOffice, a full office productivity suite."

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.libreoffice.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_BASE="http://download.documentfoundation.org/libreoffice/src/4.2.0"
SRC_LIBS="$SRC_BASE/libreoffice-dictionaries-$V.tar.xz \
	$SRC_BASE/libreoffice-help-$V.tar.xz 
	$SRC_BASE/libreoffice-translations-4.2.0.4.tar.xz
	$SRC_BASE/46eb0e7f213ad61bd5dee0c494132cb0-libwps-0.2.9.tar.bz2
	$SRC_BASE/b85436266b2ac91d351ab5684b181151-libwpg-0.2.2.tar.bz2
	$SRC_BASE/a3dcac551fae5ebbec16e844810828c4-libwpd-0.9.9.tar.bz2
	$SRC_BASE/d62650a6f908e85643e557a236ea989c-vigra1.6.0.tar.gz
	$SRC_BASE/0168229624cfac409e766913506961a8-ucpp-1.3.2.tar.gz
	$SRC_BASE/32f8e1417a64d3c6f2c727f9053f55ea-redland-1.0.16.tar.gz
	$SRC_BASE/b12c5f9cfdb6b04efce5a4a186b8416b-rasqal-0.9.30.tar.gz
	$SRC_BASE/4ceb9316488b0ea01acf011023cf7fff-raptor2-2.0.9.tar.gz
	$SRC_BASE/f3ebe34d4d8695bf889279b54673e10c-Python-3.3.3.tar.bz2
	$SRC_BASE/ea2acaf140ae40a87a952caa75184f4d-liborcus-0.5.1.tar.bz2
	$SRC_BASE/804c6cb5698db30b75ad0ff1c25baefd-openldap-2.4.31.tgz
	$SRC_BASE/46e92b68e31e858512b680b3b61dc4c1-mythes-1.2.3.tar.gz
	$SRC_BASE/01a380acfec23bf617117ce98e318f3d-mdds_0.10.1.tar.bz2
	$SRC_BASE/26b3e95ddf3d9c077c480ea45874b3b8-lp_solve_5.5.tar.gz
	$SRC_BASE/1f24ab1d39f4a51faf22244c94a6203f-xmlsec1-1.2.14.tar.gz
	$SRC_BASE/36271d3fa0d9dec1632029b6d7aac925-liblangtag-0.5.1.tar.bz2
	$SRC_BASE/ae330b9493bd4503ac390106ff6060d7-libexttextcat-3.4.3.tar.bz2
	$SRC_BASE/a2f6010987e1c601274ab5d63b72c944-hyphen-2.8.4.tar.gz
	$SRC_BASE/3121aaf3e13e5d88dfff13fb4a5f1ab8-hunspell-1.3.2.tar.gz
	$SRC_BASE/0279a21fab6f245e85a6f85fea54f511-source-code-font-1.009.tar.gz
	$SRC_BASE/1e9ddfe25ac9577da709d7b2ea36f939-source-sans-font-1.036.tar.gz
	$SRC_BASE/7a15edea7d415ac5150ea403e27401fd-open-sans-font-ttf-1.10.tar.gz
	$SRC_BASE/c3c1a8ba7452950636e871d25020ce0d-pt-serif-font-1.0000W.tar.gz
	$SRC_BASE/e7a384790b13c29113e22e596ade9687-LinLibertineG-20120116.zip
	$SRC_BASE/5c781723a0d9ed6188960defba8e91cf-liberation-fonts-ttf-2.00.1.tar.gz
	$SRC_BASE/b3174b11c2b6a341f5c99b31088bd67b-liberation-fonts-ttf-1.07.3.tar.gz
	$SRC_BASE/35efabc239af896dfb79be7ebdd6e6b9-gentiumbasic-fonts-1.10.zip
	$SRC_BASE/f872f4ac066433d8ff92f5e316b36ff9-dejavu-fonts-ttf-2.33.zip
	$SRC_BASE/c74b7223abe75949b4af367942d96c7a-crosextrafonts-carlito-20130920.tar.gz
	$SRC_BASE/368f114c078f94214a308a74c7e991bc-crosextrafonts-20130214.tar.gz
	$SRC_BASE/ac4781e01619be13461bb2d562b94a7b-cppunit-1.13.1.tar.gz
	$SRC_BASE/22f8a85daf4a012180322e1f52a7563b-libcmis-0.4.1.tar.gz
	$SRC_BASE/1756c4fa6c616ae15973c104cd8cb256-Adobe-Core35_AFMs-314.tar.gz
	$SRC_BASE/ff369e69ef0f0143beb5626164e87ae2-neon-0.29.5.tar.gz
	$SRC_BASE/libvisio-0.0.31.tar.bz2
	$SRC_BASE/libodfgen-0.0.3.tar.bz2
	$SRC_BASE/libmwaw-0.2.0.tar.bz2
	$SRC_BASE/libmspub-0.0.6.tar.bz2
	$SRC_BASE/Firebird-2.5.2.26540-0.tar.bz2
	$SRC_BASE/libetonyek-0.0.1.tar.bz2
	$SRC_BASE/libfreehand-0.0.0.tar.bz2
	$SRC_BASE/libe-book-0.0.2.tar.bz2
	$SRC_BASE/libcdr-0.0.14.tar.bz2
	$SRC_BASE/libabw-0.0.1.tar.bz2 "


SRC_URI="$SRC_BASE/libreoffice-$V.tar.xz \
	$SRC_LIBS "
	

# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="gperf unzip archive-zip wget which zip libjpeg-turbo glu gtk3 clucene cups curl dbus expat gst-plugins-base1 harfbuzz icu lcms librsvg libxml2 libxslt mesa  nss openssl poppler graphite2 unixodbc"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.xz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	install -dm755 src
	err_check "conf 2 failed."

	#diction
	tar -xf $XGPATH_SOURCE/libreoffice-dictionaries-4.2.0.4.tar.xz --no-overwrite-dir --strip-components=1
	err_check "conf 3 failed."

	for i in $SRC_LIBS; 
	do
		ln -sv $XGPATH_SOURCE/$(basename $i) src/ 
		err_check "conf $i failed."
	done

	export LO_PREFIX=/usr

	sed -e "/gzip -f/d"   \
    	-e "s|.1.gz|.1|g" \
    	-i bin/distro-install-desktop-integration
	err_check "conf 6 failed."

	sed -e "/distro-install-file-lists/d" -i Makefile.in 
	err_check "conf 7 failed."

	chmod -v +x bin/unpack-sources                     
	sed -e "s/target\.mk/langlist\.mk/"                \
    	-e "s/tar -xf/tar -x --strip-components=1 -f/" \
    	-e "/tar -x/s/lo_src_dir/start_dir/"           \
    	-i bin/unpack-sources       
	err_check "conf 8 failed."



	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --without-java --without-krb5 --without-gssapi \
			--disable-gconf \
			--sysconfdir=/etc --with-help --with-alloc=system --disable-odk \
			 --disable-postgresql-sdbc   \
             --enable-release-build=yes  \
             --with-system-boost         \
             --with-system-clucene       \
             --with-system-cairo         \
             --with-system-curl          \
             --with-system-expat         \
             --with-system-graphite      \
             --with-system-harfbuzz      \
             --with-system-icu           \
             --with-system-jpeg          \
             --with-system-lcms2         \
             --with-system-libpng        \
             --with-system-libxml        \
             --with-system-mesa-headers  \
             --with-system-nss           \
             --with-system-odbc          \
             --with-system-openssl       \
             --with-system-poppler       \
             --with-system-zlib          \
             --enable-gtk3          	\
             --enable-gstreamer          \
			 --with-parallelism=$(nproc) "

	#Third, call configure with $XGB_CONFIG
	./autogen.sh $XGB_CONFIG --with-vendor="Xiange Linux" \
	 	--with-lang="en-US zh-CN"
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE 
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
}


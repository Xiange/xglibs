#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="This is a sample skeleton xiange build script file"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://foo.bar.com/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://mirror2.layerjet.com/tdf/libreoffice/stable/4.2.3/rpm/x86_64/LibreOffice_4.2.3_Linux_x86-64_rpm.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="open-jdk-bin"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd LibreOffice_4.2.3.3_Linux_x86-64_rpm
	err_check "enter directory failed."
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	#make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	local i
	echo "install to $XGPATH_DEST"

	mkdir -p $XGPATH_DEST

	mkdir build
	cd build
	err_check "cd build failed."

	for i in ../RPMS/*;
	do
		echo "installing $i"
		rpmunpack "$i"
		err_check "unpack $i failed."

		pushd $(basename $i .rpm)
		err_check "cd $i failed."

		cp -r * $XGPATH_DEST/
		err_check "install $i failed."

		popd
	done
}

#post install
xgb_postinst()
{
	echo "running after package installed..."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
}

#post remove
xgb_postrm()
{
	echo "running after package delete..."
}

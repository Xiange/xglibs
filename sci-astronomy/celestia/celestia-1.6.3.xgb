#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="OpenGL 3D space simulator"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.shatters.net/celestia/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10




# Binary package URI.
#git clone it clone https://github.com/CelestiaProject/Celestia.git
#git clone https://github.com/CelestiaProject/CelestiaContent.git and put it to context
SRC_URI="Celestia-2023.07.03.tar.xz"


# Runtime Depend
RDEPEND="qt5 lua eigen"

# Build time depend
DEPEND="${RDEPEND}"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xaf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd Celestia
	err_check "cd $N-$V failed."

	mkdir build
	cd build
	err_check "cd build failed"

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG="-DCMAKE_INSTALL_PREFIX=/usr -DENABLE_QT5=ON -DENABLE_GLES=ON -DUSE_WAYLAND=ON -DUSE_ICU=ON " 

	#Third, call configure with $XGB_CONFIG
	cmake $XGB_CONFIG ..
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"


	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install failed."

 	#icon
	mkdir -p $XGPATH_DEST/usr/share/pixmaps/
    local imgconv1=/usr/share/celestia/splash/splash.png
    local imgconv2=/usr/share/pixmaps/celestia32.png
    local menu_type=sci
    local menu_name=Celestia
    local menu_cmd=celestia
    local menu_index=C10celestia

 	local convpara=""
    local menufile="$XGPATH_DEST/etc/xg_launch/$menu_type/$menu_index"

    declare -A Name
    Name[en]="Celestia"
    Name[zh_CN]="桌面天文馆"

    xgb_mkmenu
}


#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="tools from linux kernel"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://www.kernel.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
MAIN_VER=6
BASE_VER=6.3
PATCH_VER=7

SRC_URI="https://www.kernel.org/pub/linux/kernel/v$MAIN_VER.x/linux-${BASE_VER}.tar.xz \
    https://www.kernel.org/pub/linux/kernel/v$MAIN_VER.x/patch-$V.xz \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/cpupower.default \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/cpupower.service \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/cpupower.systemd \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/hv_fcopy_daemon.service \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/hv_kvp_daemon.service \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/hv_vss_daemon.service \
	https://gitlab.archlinux.org/archlinux/packaging/packages/linux-tools/-/raw/main/usbipd.service"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
	XGPATH_SOURCE=$XGPATH_SOURCE_RAW/linux-kernel-$BASE_VER
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.

	echo "Unpacking ..."
    tar xf $XGPATH_SOURCE/linux-$BASE_VER.tar.xz
    err_check "[Error] linux_header: check falied."

    cd linux-$BASE_VER

    unxz -dc $XGPATH_SOURCE/patch-$V.xz | patch -p1
    err_check "[Error] patch $V failed"
}

#config
xgb_config()
{
	echo "config $N-$V$R..."


	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --foo --bar "

	#Third, call configure with $XGB_CONFIG
	#./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	cd tools
	err_check "cd tools failed"

	#perf
	pushd perf

	make -f Makefile.perf prefix=/usr \
		lib=lib/perf perfexecdir=lib/perf  \
		EXTRA_CFLAGS=' -Wno-error=bad-function-cast -Wno-error=declaration-after-statement -Wno-error=switch-enum'   \
		NO_SDT=1      \
		PYTHON=python3     PYTHON_CONFIG=python3-config \
		DESTDIR="$XGPATH_DEST" 
	err_check "make perf failed"

	popd

	pushd power/cpupower
  	make VERSION=$V
	err_check "make cpupower failed"

  	popd

	pushd power/x86/x86_energy_perf_policy
	make
	err_check "make perf_policy failed"
	popd

	pushd usb/usbip
	err_check "enter usbip failed"
	sed -i 's,-Wall -Werror -Wextra,-fcommon,' configure.ac
	err_check "patch usbip failed"
	./autogen.sh   
	err_check "gen usbip failed"
	./configure --prefix=/usr --sbindir=/usr/bin
	err_check "config usbip failed"

	make
	err_check "make usbip failed"

	popd

	#tmon
	pushd thermal/tmon
	err_check "cd tmon failed"
	make
	err_check "make tmon failed"
	popd

	#cgroup_event_listener
	pushd cgroup
	err_check "cd group failed"
	make
	err_check "make group failed"
	popd

	#turbostat
	pushd power/x86/turbostat
	err_check "cd turbostat failed"
	make 
	err_check "make turbostat failed"
	popd

	#hv
	pushd hv
	err_check "cd hv failed"
	CFLAGS+=' -DKVP_SCRIPTS_PATH=\"/usr/lib/hyperv/kvp_scripts/\"' make
	err_check "make hv failed"

	popd

	#bpf
	pushd bpf
	err_check "cd bpf failed"
	make -C bpftool all
	err_check "make bpf failed"
	make -W runqslower
	err_check "make bpf2 failed"
	popd




		#bootconfig
	 pushd bootconfig   
	err_check "cd bootconfig failed"
	 make   
	err_check "make bootconfig failed"

	 popd


	#cpupower

	#run make in current directory
	#make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	cd tools
	err_check "cd tools failed"

	#perf
	pushd perf


	make -f Makefile.perf prefix=/usr \
		lib=lib/perf perfexecdir=lib/perf  \
		EXTRA_CFLAGS=' -Wno-error=bad-function-cast -Wno-error=declaration-after-statement -Wno-error=switch-enum'   \
		NO_SDT=1      \
		PYTHON=python3     PYTHON_CONFIG=python3-config \
		DESTDIR="$XGPATH_DEST" \
		install install-python_ext
	err_check "install perf failed"
	popd

	pushd power/cpupower
	make \
    DESTDIR="$XGPATH_DEST" \
    sbindir='/usr/bin' \
    libdir='/usr/lib' \
    mandir='/usr/share/man' \
    docdir='/usr/share/doc/cpupower' \
    install install-man
	err_check "install cpupower failed"
	pkgname=cpupower

	install -Dm 644 $XGPATH_SOURCE/$pkgname.default "$XGPATH_DEST/etc/default/$pkgname" &&\
  	install -Dm 644 $XGPATH_SOURCE/$pkgname.service "$XGPATH_DEST/usr/lib/systemd/system/$pkgname.service" &&\
  	install -Dm 755 $XGPATH_SOURCE/$pkgname.systemd "$XGPATH_DEST/usr/lib/systemd/scripts/$pkgname"
	err_check "install cpupower service failed"

	#change default governor
	sed -i "s@^#governor=.*@governor=conservative@g" "$XGPATH_DEST/etc/default/$pkgname"
	err_check "set cpupower service failed"

  	popd

	pushd power/x86/x86_energy_perf_policy
	install -Dm 755 x86_energy_perf_policy "$XGPATH_DEST/usr/bin/x86_energy_perf_policy" && \
	install -Dm 644 x86_energy_perf_policy.8 "$XGPATH_DEST/usr/share/man/man8/x86_energy_perf_policy.8"
	err_check "install perf_policy failed"
	popd

	pushd usb/usbip
	
	make install DESTDIR="$XGPATH_DEST"
	err_check "install usbip failed"
	popd

	#tmon
	pushd thermal/tmon
	err_check "cd tmon failed"
	make install INSTALL_ROOT="$XGPATH_DEST"
	err_check "install tmon failed"
	popd

	#cgroup_event_listener
	pushd cgroup
	err_check "cd group failed"

	install -Dm755 cgroup_event_listener "$XGPATH_DEST/usr/bin/cgroup_event_listener"
	err_check "install group failed"
	popd

	#turbostat
	pushd power/x86/turbostat
	err_check "cd turbostat failed"
	make install DESTDIR="$XGPATH_DEST"
	err_check "install turbostat failed"
	popd

	#hv
	pushd hv
	err_check "cd hv failed"

	for _p in hv_fcopy_daemon hv_kvp_daemon hv_vss_daemon; do
		install -Dm755 "$_p" "$XGPATH_DEST/usr/bin/$_p"
		install -Dm644 "$XGPATH_SOURCE/$_p.service" "$XGPATH_DEST/usr/lib/systemd/system/$_p.service"
	done
	install -dm755 "$XGPATH_DEST/usr/lib/hyperv/kvp_scripts"
	popd

	#bpf
	pushd bpf
	err_check "cd bpf failed"
	make -W runqslower_install install prefix=/usr DESTDIR="$XGPATH_DEST"
	err_check "install bpf failed"
	popd




		#bootconfig
	 pushd bootconfig   
	err_check "cd bootconfig failed"

	install -dm755 "$XGPATH_DEST/usr/bin"   
	make install DESTDIR="$XGPATH_DEST"
	 popd
}

#post install
xgb_postinst()
{
	echo "running after package installed..."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
}

#post remove
xgb_postrm()
{
	echo "running after package delete..."
}

#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Linux Kernel"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.kernel.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://www.kernel.org/pub/linux/kernel/v3.0/linux-3.10.21.tar.bz2 
 	http://www.kernel.org/pub/linux/kernel/v3.0/patch-3.10.21.xz
	https://www.kernel.org/pub/linux/kernel/v3.x/patch-$V.xz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"





#unpack
xgb_unpack()
{
	echo "Unpacking ..."
	tar xf $XGPATH_SOURCE/linux-3.10.21.tar.bz2
	err_check "[Error] linux_header: check falied."

	cd linux-3.10.21

	#patch to 3.10.0
	unxz -dc $XGPATH_SOURCE/patch-3.10.21.xz | patch -R -p1
	err_check "[Error] patch 3.10.21 failed"
	
	unxz -dc $XGPATH_SOURCE/patch-$V.xz | patch -p1
	err_check "[Error] patch $V failed"
}

#build
xgb_build()
{

	#copy configure file
	cp /boot/config-xiange .config
	err_check "change to /usr/src failed"

	make $XGPARA_MAKE
	err_check "[Error] linux_header: check falied."

	make $XGPARA_MAKE modules
	err_check "[Error] linux_header: check falied."

}

#install
xgb_install()
{
	#copy image
	mkdir -p $XGPATH_DEST/boot
	cp arch/$XGB_ARCH/boot/bzImage $XGPATH_DEST/boot/vmlinuz-$V$R
	err_check "[Error] install kernel image failed"

	cp .config $XGPATH_DEST/boot/config-$V$R
	err_check "[Error] install kernel config failed"

	#install modules
	echo ">>> install modules "
	mkdir -p $XGPATH_DEST/lib/modules
	make INSTALL_MOD_PATH=$XGPATH_DEST modules_install
	err_check "[Error] install modules falied."

}



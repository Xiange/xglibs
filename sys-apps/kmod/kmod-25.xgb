#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="libraries and utilities for loading kernel modules"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://www.kernel.org/pub/linux/utils/kernel/kmod/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-$V.tar.xz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xaf $XGPATH_SOURCE/$N-$V$R.tar.xz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+="  --sysconfdir=/etc \
		--bindir=/bin \
		--with-rootlibdir=/lib \
		--with-xz \
		--with-zlib \
		--disable-manpages"

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "make failed"

	mkdir -p $XGPATH_DEST/sbin
	for target in depmod insmod modinfo modprobe rmmod; do
  		ln -sv ../bin/kmod $XGPATH_DEST/sbin/$target
		err_check "inst $target failed"
	done

	mkdir -p $XGPATH_DEST/bin
	mkdir -p $XGPATH_DEST/usr/bin
	ln -sv kmod $XGPATH_DEST/bin/lsmod
	err_check "inst lsmod failed"
	ln -sv /bin/kmod $XGPATH_DEST/usr/bin/
}



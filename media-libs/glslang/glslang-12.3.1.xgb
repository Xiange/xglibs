#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Khronos-reference front end for GLSL/ESSL"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://github.com/KhronosGroup/glslang"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="https://github.com/KhronosGroup/glslang/archive/refs/tags/$V.tar.gz \
	https://patch-diff.githubusercontent.com/raw/KhronosGroup/glslang/pull/3283.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$V.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	patch -Np1 -i "$XGPATH_SOURCE"/3283.patch
	err_check "patch  failed."

	CXXFLAGS+=" -ffat-lto-objects"

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG=" -GNinja \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_BUILD_TYPE=None \
		-DBUILD_SHARED_LIBS=ON "

	#Third, call configure with $XGB_CONFIG
	cmake -Bbuild-shared $XGB_CONFIG -DBUILD_SHARED_LIBS=ON
	err_check "cmake shared failed"

	cmake -Bbuild-static $XGB_CONFIG -DBUILD_SHARED_LIBS=OFF
	err_check "cmake static failed"
	
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	ninja -Cbuild-shared
	err_check "build shared failed"
	ninja -Cbuild-static
	err_check "build static failed"
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	DESTDIR=$XGPATH_DEST ninja -C build-shared  install
	err_check "install shared failed"
	DESTDIR=$XGPATH_DEST ninja -C build-static  install
	err_check "install static failed"

	 cd ${XGPATH_DEST}/usr/lib   
	 for lib in *.so; do
		 ln -sf "${lib}" "${lib}.0"
	 done
}

#post install
xgb_postinst()
{
	echo "running after package installed..."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
}

#post remove
xgb_postrm()
{
	echo "running after package delete..."
}

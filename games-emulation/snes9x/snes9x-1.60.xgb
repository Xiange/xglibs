#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Super Nintendo Entertainment System (SNES) emulator"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.snes9x.com/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://github.com/snes9xgit/snes9x/archive/master.zip"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="gtk3"

# Build time depend
DEPEND="${RDEPEND}"




#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	unzip $XGPATH_SOURCE/$(basename $SRC_URI)
	err_check "unpack $N-$V failed."

}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-master
	err_check "cd failed."

	#cd unix
	#err_check "patch 6 failed."

	#XGB_CONFIG+="--without-x --disable-xvideo --disable-xinerama"

	#./configure $XGB_CONFIG 
	#err_check "config 1 failed."

	cd gtk
	err_check "cd gtk 7 failed."

	mkdir build
	cd build
	err_check "cd build  failed."

	#Third, call configure with $XGB_CONFIG

	XGB_CONFIG+="-Dslang=false -Dxv=false -Doss=false "
	meson $XGB_CONFIG ..	 
	err_check "config 2 failed."

}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	ninja

}

#install
xgb_install()
{

	DESTDIR=$XGPATH_DEST ninja install

}


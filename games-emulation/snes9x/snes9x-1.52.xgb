#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Super Nintendo Entertainment System (SNES) emulator"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://code.google.com/p/snes9x-gtk/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://snes9x-gtk.googlecode.com/files/snes9x-$V-src.tar.bz2 
http://search.belnet.be/mirror/rsync.gentoo.org/gentoo-portage/games-emulation/snes9x/files/snes9x-1.52-build.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"




#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V-src.tar.bz2
	err_check "unpack $N-$V failed."

	#fist, cd build directory
	cd $N-$V$R-src

	patch -p0 -i $XGPATH_SOURCE/snes9x-1.52-build.patch
	err_check "patch $N-$V failed."

	cd unix
	autoreconf
}

#config
xgb_config()
{
	echo "config $N-$V$R..."


	./configure $XGB_CONFIG  --enable-zsnes-asm --disable-screenshot

	cd ../gtk

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG --without-png
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	cd ../unix
	make
	err_check "compile $N-$V failed."

	make -C ../gtk
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"
	mkdir -p $XGPATH_DEST/usr/bin
	install -m 0755 snes9x $XGPATH_DEST/usr/bin
	err_check "install $N-$V failed."

	#install everything to $XGPATH_DEST
	cd ../gtk
	make DESTDIR=$XGPATH_DEST install
}


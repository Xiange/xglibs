#!/bin/sh

#
# Xiange Initramfs init file for USB device
#
#	Copyright (C) Lihui Zhang <swordhuihui@gmail.com>
#	2014.05.20
#	License: GPL V2
#
#	$1 is squasfs image file, with xiang-root(xg64.img)
#	$2 is cow.out file, for squashfs writing.
#	$3 is final mount point. [optional]
#

NORMAL="\\033[0;39m" # Standard console grey
SUCCESS="\\033[1;32m" # Success is green
WARNING="\\033[1;33m" # Warnings are yellow
FAILURE="\\033[1;31m" # Failures are red
INFO="\\033[1;36m" # Information is light cyan
BRACKET="\\033[1;34m" # Brackets are blue

#show info in cyan color, $1 is information.
showinfo()
{
	echo -e  $INFO"$1"$NORMAL
}

#show OK message in green color, $1 is information.
showOK()
{
	echo -e $SUCCESS"$1"$NORMAL
}

#show OK message in green color, $1 is information.
showFailed()
{
	echo -e $FAILURE"$1"$NORMAL
}

#check return code. show $1 if error.
err_check()
{
	if [ $? != 0 ]; then
		showFailed "$1"
		/bin/sh
	fi
}

wait_root()
{
	rootdev=$(blkid | sed "s/\"//g" | grep $rootid | grep -o "^[^:]*")

	if [ "x$rootdev" != "x" ]; then
		return 0
	else
		return 1
	fi
}

get_rootfstype()
{
	roottype=$(cat /proc/cmdline | grep -o "rootfstype=[^ ]*" | sed "s/rootfstype=//g")

	if [ -n "$roottype" ]; then
		roottype="-t $roottype"
	fi
}

get_squash_arch()
{
	root_arch=$(cat /proc/cmdline | grep -o "xgsquash=[^ ]*" | sed "s/xgsquash=//g")

	if [ -n "$root_arch" ]; then
		xgb_arch="$root_arch"
	fi
}

showinfo "Preparing Xiange system ..."
mount -t sysfs -o nodev,noexec,nosuid sysfs /sys
err_check "mount sys failed."
mount -t proc -o nodev,noexec,nosuid proc /proc
err_check "mount proc failed."
mount -t devtmpfs none /dev
err_check "mount dev failed."


#cdrom
modprobe cdrom
err_check "load cdrom failed."
modprobe sr_mod
err_check "load sr_mod failed."

#check safemode
safemode=$(cat /proc/cmdline | grep "safemode")
if [ "$?" == "0" ]; then
	showinfo "running in safemode..."
	/bin/sh
fi

rootid=$(cat /proc/cmdline | grep -o "root=[^ ]*" | sed "s/root=//g")
err_check "get rootid failed."
showinfo "waiting root $rootid "

i=0
while [ "$i" != "60" ];
do
	i=$(($i+1))
	wait_root
	if [ "$?" == "0" ]; then
		break
	else
		printf "."
		sleep 1
		continue
	fi
done

if [ "x$rootdev" == "x" ]; then
	echo "!"
	echo ""
	showFailed "$rootid is not found, enter failsafe mode."
	/bin/sh
fi

xgb_arch=$(uname -m)
get_squash_arch

ddmntp=/tmp
finalmnt=/tmp/root
srcfile=$ddmntp/xiange/xiange-sqroot-$xgb_arch
cowfile=$ddmntp/xiange/cow-${xgb_arch}.out


showOK " OK"
showinfo "Found $rootdev, mounting $xgb_arch..."
mount $rootdev $ddmntp
if [ "$?" != "0" ]; then
	showFailed "mount $rootdev to $ddmntp failed, enter failsafe mode"
	/bin/sh
fi

#modules
modprobe squashfs
err_check "load squshfs failed."
modprobe loop
err_check "load loop failed."
modprobe overlay
err_check "load overlay failed."


#mount squshfs
mount "$srcfile" /mnt 
err_check "mount $1 to /mnt failed."

#mount tmpfs
mount -t tmpfs none /tmp -o size=1G,mode=1777
err_check "mount /tmp failed."

mkdir -p /tmp/upper
mkdir -p /tmp/work
mkdir -p /tmp/root

mount -t overlay -o lowerdir=/mnt,upperdir=/tmp/upper,workdir=/tmp/work overlay $finalmnt
err_check "mount overlayfs failed"

showinfo "all done, booting..."
mount -t devtmpfs none $finalmnt/dev
exec switch_root -c /dev/console $finalmnt /sbin/init

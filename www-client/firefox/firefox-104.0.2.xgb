#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Firefox Web Browser"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.mozilla.com/firefox"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://archive.mozilla.org/pub/firefox/releases/$V/source/firefox-$V.source.tar.xz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="alsa-lib zip unzip nspr nss libevent libvpx nspr gstreamer gst-plugins-base gst-plugins-good gst-libav hunspell libproxy cbindgen node.js pulseaudio"

# Build time depend
DEPEND="${RDEPEND} yasm"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."


	cd firefox-$V
	err_check "cd failed"

cat > mozconfig << "EOF"
# If you have a multicore machine, all cores will be used by default.

# If you have installed (or will install) wireless-tools, and you wish
# to use geolocation web services, comment out this line
ac_add_options --disable-necko-wifi

# API Keys for geolocation APIs - necko-wifi (above) is required for MLS
# Uncomment the following line if you wish to use Mozilla Location Service
#ac_add_options --with-mozilla-api-keyfile=$PWD/mozilla-key

# Uncomment the following line if you wish to use Google's geolocation API
# (needed for use with saved maps with Google Maps)
#ac_add_options --with-google-location-service-api-keyfile=$PWD/google-key

# startup-notification is required since firefox-78

# Uncomment the following option if you have not installed PulseAudio and
# want to use alsa instead
#ac_add_options --enable-audio-backends=alsa

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --with-system-icu
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-webp

# Unlike with thunderbird, although using the gold linker can
# save four megabytes in the installed file it does not make
# the build faster.

# libdavid (av1 decoder) requires nasm. Uncomment this if nasm
# has not been installed. Do not uncomment this if you have
# ffmpeg-5 installed.
#ac_add_options --disable-av1

# You cannot distribute the binary if you do this
ac_add_options --enable-official-branding

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# Disabling debug symbols makes the build much smaller and a little
# faster. Comment this if you need to run a debugger. Note: This is
# required for compilation on i686.
ac_add_options --disable-debug-symbols

# The elf-hack is reported to cause failed installs (after successful builds)
# on some machines. It is supposed to improve startup time and it shrinks
# libxul.so by a few MB - comment this if you know your machine is not affected.
ac_add_options --disable-elf-hack

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
# enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# The default level of optimization again produces a working build with gcc.
ac_add_options --enable-optimize

ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib
ac_add_options --enable-default-toolkit=cairo-gtk3-wayland

# Using sandboxed wasm libraries has been moved to all builds instead
# of only mozilla automation builds. It requires extra llvm packages
# and was reported to seriously slow the build. Disable it.
ac_add_options --without-wasm-sandboxed-libraries

# The following option unsets Telemetry Reporting. With the Addons Fiasco,
# Mozilla was found to be collecting user's data, including saved passwords and
# web form data, without users consent. Mozilla was also found shipping updates
# to systems without the user's knowledge or permission.
# As a result of this, use the following command to permanently disable
# telemetry reporting in Firefox.
unset MOZ_TELEMETRY_REPORTING

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir
EOF

	sed -i '/ROOT_CLIP_CHAIN/d' gfx/webrender_bindings/webrender_ffi.h
	err_check "patch 1 failed"

	echo "AIzaSyDxKL42zsPjbke5O8_rPVpVrLrJ8aeE9rQ" > google-key
	echo "613364a7-9418-4c86-bcee-57e32fd70c23" > mozilla-key

	export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none &&
	export MOZBUILD_STATE_PATH=${PWD}/mozbuild            &&
	./mach configure

}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	./mach build
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none DESTDIR=$XGPATH_DEST ./mach install
	err_check "install failed."
	
	
	#icons
	mkdir -p $XGPATH_DEST/usr/share/pixmaps
	cp $XGPATH_DEST/usr/lib/firefox/browser/chrome/icons/default/default48.png $XGPATH_DEST/usr/share/pixmaps/firefox.png
	err_check "install icon failed."

	#desktop files
	mkdir -p $XGPATH_DEST/usr/share/applications
	cat > $XGPATH_DEST/usr/share/applications/firefox.desktop << EOF
[Desktop Entry]
Version=1.0
Type=Application
Name[en]=firefox
Name[zh_CN]=火狐浏览器
GenericName[en]=Web Browser
GenericName[zh_CN]=浏览器
Comment[en]=Your web, the way you like it
Comment[zh_CN]=你的网络你做主
Exec=firefox %U
Icon=firefox.png
Terminal=false
MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;
StartupNotify=true
Categories=Network;WebBrowser;
Encoding=UTF-8
EOF
	err_check "install desktop file failed."

	#start menu
    local imgconv1=""
    local imgconv2=/usr/lib/firefox/browser/chrome/icons/default/default32.png
    local menu_type=net
    local menu_cmd="firefox"
    local menu_index=C00firefox

    local convpara=""
	local menufile="$XGPATH_DEST/etc/xg_launch/$menu_type/$menu_index"

	declare -A Name
	Name[en]="firefox"
	Name[zh_CN]="火狐浏览器"

	xgb_mkmenu
}


#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Samba Server component"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.samba.org/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://www.samba.org/samba/ftp/stable/samba-$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="libtirpc lmdb gnutls"

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V
	err_check "enter directory failed."

	#Fix a file that fails to compile with Glibc-2.32: 
	#sed -r 's/nss_(setpw|endpw|setgr|endgr)ent/my_&/' \
    #-i nsswitch/nsstest.c

	CFLAGS+=" -I/usr/include/tirpc "
	export CFLAGS="$CFLAGS"
	export LDFLAGS="-ltirpc"

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --localstatedir=/var \
		 --with-piddir=/run/samba  --enable-fhs --with-systemd --without-ad-dc \
		 --without-ads" 

	#Third, call configure with $XGB_CONFIG
	PYTHON=/usr/bin/python3 ./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install failed"

	#services
	mkdir -p $XGPATH_DEST/etc/samba
	install -m644 examples/smb.conf.default $XGPATH_DEST/etc/samba
	err_check "install 3 failed"

	install -d -m 0755 $XGPATH_DEST/lib/systemd/system
	err_check "install 4 failed"

	touch $XGPATH_DEST/lib/systemd/system/nmb.service
	cat > $XGPATH_DEST/lib/systemd/system/nmb.service << EOF

[Unit]
Description=Samba NMB Daemon
After=syslog.target network.target

[Service]
Type=forking
PIDFile=/run/samba/nmbd.pid
ExecStart=/usr/sbin/nmbd -D
ExecReload=/usr/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target

EOF
	err_check "install 5 failed."



	touch $XGPATH_DEST/lib/systemd/system/winbind.service 
	cat > $XGPATH_DEST/lib/systemd/system/winbind.service << EOF

[Unit]
Description=Samba Winbind Daemon
After=syslog.target network.target nmb.service

[Service]
Type=forking
PIDFile=/run/samba/winbindd.pid
ExecStart=/usr/sbin/winbindd -D
ExecReload=/usr/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target

EOF
	err_check "install 6 failed."


	touch $XGPATH_DEST/lib/systemd/system/smb.service
	cat > $XGPATH_DEST/lib/systemd/system/smb.service << EOF
[Unit]
Description=Samba SMB Daemon
After=syslog.target network.target nmb.service winbind.service

[Service]
Type=forking
PIDFile=/run/samba/smbd.pid
LimitNOFILE=16384
ExecStart=/usr/sbin/smbd -D
ExecReload=/usr/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target

EOF
	err_check "install 7 failed."


	#create home directory
	mkdir -p $XGPATH_DEST/home/samba
	chown nobody:nogroup $XGPATH_DEST/home/samba
	err_check "install 8 failed"



}

#post install
xgb_postinst()
{
	echo "running after package installed..."
	echo "done"
}

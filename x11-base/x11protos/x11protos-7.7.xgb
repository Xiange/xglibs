#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Proto headers for Xorg X11"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.x.org/wiki/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRCURL="http://xorg.freedesktop.org/releases/individual/proto"
Xproto="bigreqsproto-1.1.2.tar.bz2 \
compositeproto-0.4.2.tar.bz2 \
damageproto-1.2.1.tar.bz2 \
dmxproto-2.3.1.tar.bz2 \
dri2proto-2.8.tar.bz2 \
dri3proto-1.0.tar.bz2 \
fixesproto-5.0.tar.bz2 \
fontsproto-2.1.2.tar.bz2 \
glproto-1.4.17.tar.bz2 \
inputproto-2.3.tar.bz2 \
kbproto-1.0.6.tar.bz2 \
presentproto-1.0.tar.bz2 \
randrproto-1.4.0.tar.bz2 \
recordproto-1.14.2.tar.bz2 \
renderproto-0.11.1.tar.bz2 \
resourceproto-1.2.0.tar.bz2 \
scrnsaverproto-1.2.2.tar.bz2 \
videoproto-2.3.2.tar.bz2 \
xcmiscproto-1.2.2.tar.bz2 \
xextproto-7.3.0.tar.bz2 \
xf86bigfontproto-1.2.0.tar.bz2 \
xf86dgaproto-2.1.tar.bz2 \
xf86driproto-2.1.1.tar.bz2 \
xf86vidmodeproto-2.3.1.tar.bz2 \
xineramaproto-1.2.1.tar.bz2 \
xproto-7.0.25.tar.bz2"


#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI=""


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="util-macros"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	local i

	for i in $Xproto
	do
		SRC_URI+="$SRCURL/$i "
	done
}

#unpack
xgb_unpack()
{
	local i

	for i in $Xproto
	do
		tar xf $XGPATH_SOURCE/$i
		err_check "unpack $i failed."
	done
}

#config
xgb_config()
{
	local i
	local name

	echo "config $N-$V$R..."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --mandir=/usr/man --localstatedir=/var \
		--disable-static "

	for i in $Xproto
	do
		name=${i%.tar.bz2}
		pushd $name

		echo ""
		echo ">>> config $name ..."
		echo ""

		./configure $XGB_CONFIG
		err_check "config $name failed."
		popd
	done
}

#build
xgb_build()
{
	local i
	local name

	echo "build $N-$V$R..."

	for i in $Xproto
	do
		name=${i%.tar.bz2}
		pushd $name
		make $XGPARA_MAKE
		err_check "make $name failed."
		popd
	done
}

#install
xgb_install()
{
	local i
	local name

	echo "install $N-$V$R..."

	for i in $Xproto
	do
		name=${i%.tar.bz2}
		pushd $name
		make DESTDIR=$XGPATH_DEST install
		err_check "install $name failed."
		popd
	done

}


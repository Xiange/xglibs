#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Certificate Authority Certificates"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://foo.bar.com/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://anduin.linuxfromscratch.org/sources/other/certdata.txt"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="openssl perl"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	#tar xf $XGPATH_SOURCE/$N-$V$R.tar.bz2
	cp $XGPATH_SOURCE/certdata.txt .
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	#cd $N-$V$R
	#err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --foo --bar "

	#Third, call configure with $XGB_CONFIG
	#./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	#make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	#make DESTDIR=$XGPATH_DEST install

	mkdir -p $XGPATH_DEST/usr/bin 
	err_check "inst 1 failed."

	cp $XGPATH_SCRIPT/make-cert.pl $XGPATH_DEST/usr/bin
	err_check "inst 2 failed."
	chmod +x $XGPATH_DEST/usr/bin/make-cert.pl
	err_check "inst 3 failed."

	ln -sv $XGPATH_DEST/usr/bin/make-cert.pl /tmp
	err_check "inst 3.1 failed."


	cp $XGPATH_SCRIPT/make-ca.sh $XGPATH_DEST/usr/bin
	err_check "inst 4 failed."
	chmod +x $XGPATH_DEST/usr/bin/make-ca.sh
	err_check "inst 5 failed."

	mkdir -p $XGPATH_DEST/usr/sbin 
	err_check "inst 6 failed."

	cp $XGPATH_SCRIPT/remove-expired-certs.sh $XGPATH_DEST/usr/sbin
	err_check "inst 7 failed."
	chmod +x $XGPATH_DEST/usr/sbin/remove-expired-certs.sh
	err_check "inst 8 failed."

	$XGPATH_DEST/usr/bin/make-ca.sh
	err_check "make-ca failed."

	SSLDIR=/etc/ssl                                              
	$XGPATH_DEST/usr/sbin/remove-expired-certs.sh certs
	err_check "inst 9 failed."
	install -d $XGPATH_DEST/${SSLDIR}/certs                                   
	err_check "inst 10 failed."
	cp -v certs/*.pem $XGPATH_DEST/${SSLDIR}/certs                            
	err_check "inst 11 failed."
	c_rehash                                                     
	err_check "inst rehash failed."
	install BLFS-ca-bundle*.crt $XGPATH_DEST/${SSLDIR}/ca-bundle.crt          
	err_check "inst 12 failed."
	ln -sfv ../ca-bundle.crt $XGPATH_DEST/${SSLDIR}/certs/ca-certificates.crt
	err_check "inst 13 failed."
	unset SSLDIR

	sed -i "s@CONVERTSCRIPT=.*@CONVERTSCRIPT=\"/usr/bin/make-cert.pl\"@g" \
		$XGPATH_DEST/usr/bin/make-ca.sh
	err_check "inst 14 failed."

}

#post install
xgb_postinst()
{
	echo "running after package installed..."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
}

#post remove
xgb_postrm()
{
	echo "running after package delete..."
}

#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="This is a sample skeleton xiange build script file"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://foo.bar.com/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://downloads.es.net/pub/iperf/iperf-$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"

xgb_remove_c_flag()
{
	#$1 is flag to remove.

	newflag=$(echo $CFLAGS | sed "s/$1//g") 
	CFLAGS=$newflag

	export CFLAGS=$CFLAGS
	export CPPFLAGS=$CFLAGS
}

xgb_remove_cxx_flag()
{
	#$1 is flag to remove.

	newflag=$(echo $CXXFLAGS | sed "s/$1//g") 
	CXXFLAGS=$newflag
	export CXXFLAGS=$CXXFLAGS
}



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."

	xgb_remove_c_flag -fomit-frame-pointer
	xgb_remove_cxx_flag -fomit-frame-pointer

	echo "init: CFLAGS=$CFLAGS"

}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/iperf-$V$R.tar.gz


	echo "unpack: CFLAGS=$CFLAGS"
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd iperf-$V$R
	#err_check "enter directory failed."

	echo "config: CFLAGS=$CFLAGS"
	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --disable-static "

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	echo "make: CFLAGS=$CFLAGS"
	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install: CFLAGS=$CFLAGS"
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
}

#post install
xgb_postinst()
{
	echo "running after package installed..."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
}

#post remove
xgb_postrm()
{
	echo "running after package delete..."
}

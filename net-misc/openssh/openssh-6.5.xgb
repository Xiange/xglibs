#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="http://www.openssh.org/"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="Port of OpenBSD's free SSH release"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/$N-${V}p1.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="openssl"

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-${V}p1.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-${V}p1

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc/ssh \
		--datadir=/usr/share/sshd \
		--libexecdir=/usr/lib/openssh \
		--with-md5-passwords \
		--with-privsep-path=/var/lib/sshd "

	sed -i.bak 's/ -ldes//' configure

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	make check 2>&1
}

xgb_ssh_deamon()
{
	mkdir -p $XGPATH_DEST/etc/rc.d/init.d
	cat > $XGPATH_DEST/etc/rc.d/init.d/sshd << "EOF"
#!/bin/sh
########################################################################
# Begin $rc_base/init.d/
#
# Description : start/stop sshd
#
# Authors : sword
#
# Version : 00.00
#
# Notes :
#
########################################################################

. /etc/sysconfig/rc
. ${rc_functions}

case "${1}" in
start)
	boot_mesg "Starting sshd..."

	[ -f /etc/ssh/ssh_host_dsa_key ] \
		|| ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key

	[ -f /etc/ssh/ssh_host_rsa_key ] \
		|| ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key

	loadproc /usr/sbin/sshd
	;;
stop)
	boot_mesg "Stopping sshd..."
	killproc /usr/sbin/sshd
	;;
reload)
	boot_mesg "Reloading..."
	reloadproc /usr/sbin/sshd
	;;
restart)
	${0} stop
	sleep 1
	${0} start
	;;
status)
	statusproc /usr/sbin/sshd
	;;
*)
	echo "Usage: ${0} {start|stop|reload|restart|status}"
	exit 1
	;;
esac

# End $rc_base/init.d/
EOF
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install $N-$V failed"

	#write daemon file
	xgb_ssh_deamon
	chmod a+x $XGPATH_DEST/etc/rc.d/init.d/sshd
	err_check "install $N-$V failed"

	install -v -m700 -d $XGPATH_DEST/var/lib/sshd &&
	chown -v root:sys $XGPATH_DEST/var/lib/sshd
	err_check "install $N-$V failed"

}

#post install
xgb_postinst()
{
	echo "running after package installed..."
	userdel sshd 2>/dev/null
	groupdel sshd 2>/dev/null

	groupadd -g 50 sshd &&
	useradd -c 'sshd PrivSep' -d /var/lib/sshd -g sshd \
	    -s /bin/false -u 50 sshd
	err_check "Create sshd:sshd failed."
}

#pre remove
xgb_prerm()
{
	echo "running before package delete..."
	userdel sshd 2>/dev/null
	groupdel sshd 2>/dev/null
	return 0
}


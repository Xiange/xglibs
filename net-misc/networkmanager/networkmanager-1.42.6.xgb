#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Network configuration and management in an easy way. Desktop environment independent."

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.gnome.org/projects/NetworkManager/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://download.gnome.org/sources/NetworkManager/1.42/NetworkManager-$V.tar.xz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="dbus-glib intltool libnl nss systemd dhcp iptables libndp"

# Build time depend
DEPEND="${RDEPEND}"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd NetworkManager-$V$R
	err_check "enter directory failed."

	#Fix a missing meson.build file for initrd hooks (not used in BLFS): 
	#sed '/initrd/d' -i src/meson.build

	#Fix the python scripts so that they use Python 3: 
	grep -rl '^#!.*python$' | xargs sed -i '1s/python/&3/'


	mkdir build
	cd build
	err_check "enter build directory failed."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc          \
		--buildtype=release        \
      --localstatedir=/var       \
      -Dlibaudit=no              \
      -Dlibpsl=false             \
      -Dnmtui=true               \
      -Dovs=false                \
      -Dppp=false                \
      -Dselinux=false            \
      -Dqt=false                 \
      -Dudev_dir=/lib/udev       \
      -Dsession_tracking=systemd \
	  -Dintrospection=false \
      -Dsystemdsystemunitdir=/lib/systemd/system "



	#Third, call configure with $XGB_CONFIG
	meson $XGB_CONFIG ..
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	ninja
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	DESTDIR=$XGPATH_DEST ninja install
	err_check "install $N-$V failed."

	mkdir -p $XGPATH_DEST/etc/NetworkManager/
	touch $XGPATH_DEST/etc/NetworkManager/NetworkManager.conf
	cat >> $XGPATH_DEST/etc/NetworkManager/NetworkManager.conf << "EOF"
[main]
plugins=keyfile
EOF


	mkdir -p $XGPATH_DEST/etc/NetworkManager/conf.d
	touch $XGPATH_DEST/etc/NetworkManager/conf.d/polkit.conf
	cat > $XGPATH_DEST/etc/NetworkManager/conf.d/polkit.conf << "EOF"
[main]
auth-polkit=true
EOF

	cat > $XGPATH_DEST/etc/NetworkManager/conf.d/dhcp.conf << "EOF"
[main]
dhcp=dhclient
EOF

	cat > $XGPATH_DEST/etc/NetworkManager/conf.d/no-dns-update.conf << "EOF"
[main]
dns=none
EOF


	mkdir $XGPATH_DEST/usr/share/polkit-1/rules.d
	cat > $XGPATH_DEST/usr/share/polkit-1/rules.d/org.freedesktop.NetworkManager.rules << "EOF"
polkit.addRule(function(action, subject) {
    if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 && subject.isInGroup("netdev")) {
        return polkit.Result.YES;
    }
});
EOF



}

xgb_postinst()
{
	groupadd -fg 86 netdev
	echo "add group netdev"
}

#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="File transfer program to keep remote files into sync"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://rsync.samba.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://www.samba.org/ftp/rsync/src/rsync-$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="zlib"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --without-included-zlib --disable-xxhash --disable-openssl "
	XGB_CONFIG+=" --without-included-zlib --disable-xxhash "


	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install failed."

	mkdir -p $XGPATH_DEST/etc
	touch $XGPATH_DEST/etc/rsyncd.conf

cat > $XGPATH_DEST/etc/rsyncd.conf << "EOF"
# This is a basic rsync configuration file
# It exports a single module without user authentication.

motd file = /home/rsync/welcome.msg
use chroot = yes

[localhost]
    path = /home/rsync
    comment = Default rsync module
    read only = yes
    list = yes
    uid = rsyncd
    gid = rsyncd

EOF
	
}

#post install
xgb_postinst()
{
	echo "running after package installed..."

	groupadd -g 48 rsyncd
	useradd -c "rsyncd Daemon" -d /home/rsync -g rsyncd \
    	-s /bin/false -u 48 rsyncd

	echo "Done"
}


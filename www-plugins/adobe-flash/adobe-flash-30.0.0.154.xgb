#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Adobe Flash Player"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.adobe.com/go/kb406791"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://fpdownload.macromedia.com/get/flashplayer/pdc/$V/flash_player_npapi_linux.i386.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
	if [ "$XGB_ARCH" == "x86_64" ]; then
		SRC_URI="http://fpdownload.macromedia.com/get/flashplayer/pdc/$V/flash_player_npapi_linux.x86_64.tar.gz"
	fi
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	#cd $N-$V$R
	#err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --foo --bar "

	#Third, call configure with $XGB_CONFIG
	#./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	#make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	cp -r usr $XGPATH_DEST/
	err_check "cp 1 failed."

	mkdir -p $XGPATH_DEST/usr/lib/mozilla/plugins
	err_check "mkdir failed."

	cp libflashplayer.so $XGPATH_DEST/usr/lib/mozilla/plugins
	err_check "cp 2 failed."

	#install everything to $XGPATH_DEST
	#make DESTDIR=$XGPATH_DEST install
}


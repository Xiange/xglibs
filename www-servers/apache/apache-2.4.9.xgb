#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="apache is web server"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://httpd.apache.org/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SCRIPT_AUTHORS="Íõ½­Î°<jonsk.echo@gmail.com>"

SRC_URI="http://archive.apache.org/dist/httpd/httpd-$V.tar.bz2 "

# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="apr apr-util pcre openssl"

# Build time depend
DEPEND="${RDEPEND} lua-5.2.3"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/httpd-$V$R.tar.bz2
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd httpd-$V$R
	# BLFS FHS layout
cat >> config.layout  << "EOF"
	<Layout FHS>
	    prefix:             /usr
	    exec_prefix:        ${prefix}
	    bindir:             ${exec_prefix}/bin
	    sbindir:            ${exec_prefix}/sbin
	    libdir:             ${exec_prefix}/lib
	    libexecdir:         ${exec_prefix}/lib/apache
	    mandir:             ${prefix}/share/man
	    sysconfdir:         /etc/apache
	    datadir:            /srv/www
	    installbuilddir:    ${libexecdir}/build
	    errordir:           ${datadir}/error
	    iconsdir:           ${datadir}/icons
	    htdocsdir:          ${datadir}/htdocs
	   manualdir:          ${datadir}/manual
	    cgidir:             ${datadir}/cgi-bin
	    includedir:         ${prefix}/include/apache
	    localstatedir:      ${datadir}
	    runtimedir:         /var/run
	    logfiledir:         /var/log/apache
	    proxycachedir:      /var/cache/apache/proxy
	</Layout>
EOF


	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --enable-layout=FHS --enable-mods-shared=all \
		--enable-ssl -with-mpm=worker --disable-v4-mapped "

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"


	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install 1 failed."

	chown -v root:root $XGPATH_DEST/usr/lib/apache/httpd.exp \
		$XGPATH_DEST/usr/sbin/{apxs,apachectl,dbmmanage,envvars{,-std}} \
		$XGPATH_DEST/usr/share/man/*

	chown -Rv 25:25 $XGPATH_DEST/srv/www
	err_check "install 3 failed."

	sed -i -e "s/User daemon/User apache/" \
		-e "s/Group daemon/Group apache/" \
		$XGPATH_DEST/etc/apache/httpd.conf
	err_check "install 4 failed."

	#systemd
    mkdir -p $XGPATH_DEST/lib/systemd/system
    cat > $XGPATH_DEST/lib/systemd/system/httpd.service << EOF
[Unit]
Description=Apache Web Server
After=network.target

[Service]
Type=forking
PIDFile=/run/httpd.pid
ExecStart=/usr/sbin/apachectl start
ExecStop=/usr/sbin/apachectl graceful-stop
ExecReload=/usr/sbin/apachectl graceful
PrivateTmp=true
LimitNOFILE=infinity

[Install]
WantedBy=multi-user.target
EOF

}

#post install
xgb_postinst()
{
	echo "running after package installed..."

	groupdel apache 2>/dev/null
	userdel apache 2>/dev/null

	groupadd -g 25 apache &&
	useradd -c "Apache Server" -d /dev/null -g apache \
	-s /bin/false -u 25 apache

	echo "Done"
}


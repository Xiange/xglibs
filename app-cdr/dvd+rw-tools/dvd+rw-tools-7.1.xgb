#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="A set of tools for DVD+RW/-RW drives"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://fy.chalmers.se/~appro/linux/DVD+RW/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

PATCH_URI="http://ftp.riken.go.jp/pub/Linux/gentoo/app-cdr/dvd+rw-tools/files"

SRC_URI="http://fy.chalmers.se/~appro/linux/DVD+RW/tools/dvd+rw-tools-7.1.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	#patch it
	sed -i '/stat.h/a #include <sys/sysmacros.h>' growisofs.c 
	err_check "patch 1 failed"
	sed -i '/stdlib/a #include <limits.h>' transport.hxx
	err_check "patch 2 failed"


	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --foo --bar "

	#Third, call configure with $XGB_CONFIG
	#./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	SHELL=/bin/bash CC="${CC}" make all rpl8
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make SHELL=/bin/bash prefix="$XGPATH_DEST/usr" install
	err_check "install failed."

	mkdir -p $XGPATH_DEST/usr/share/doc/dvd+rw-tools-$V
	install -v -m644 -D index.html \
		    $XGPATH_DEST/usr/share/doc/dvd+rw-tools-$V/index.html
}

#post install
xgb_postinst()
{
	echo "running after package installed..."
	#ulimit -l unlimited
	echo "done"
}


#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="a set of command line programs that allows to record CD/DVD/BluRay media"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://cdrecord.berlios.de/private/cdrecord.html"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://sourceforge.net/projects/cdrtools/files/cdrtools-3.01.tar.bz2"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"




#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.bz2
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R

	patch -p1 < $XGPATH_SCRIPT/cdrtools-3.01-fix-20151126-mkisofs-isoinfo.patch
	err_check "patch failed"

	#second, add package specified config params to XGB_CONFIG
	#XGB_CONFIG+=" --foo --bar "

	#Third, call configure with $XGB_CONFIG
	#./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make CC="${CC}"  \
		INS_BASE="${XGPATH_DEST}/usr" INS_RBASE="$XGPATH_DEST" \
		LINKMODE="dynamic" RUNPATH="" GMAKE_NOWARN="true"
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make CC="${CC}"  \
		INS_BASE="${XGPATH_DEST}/usr" INS_RBASE="$XGPATH_DEST" \
		LINKMODE="dynamic" RUNPATH="" GMAKE_NOWARN="true" install

}


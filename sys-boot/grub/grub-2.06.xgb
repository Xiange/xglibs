#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="GNU GRUB 2 boot loader"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.gnu.org/software/grub/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="ftp://ftp.gnu.org/gnu/grub/grub-$V.tar.xz \
https://www.linuxfromscratch.org/patches/blfs/svn/grub-2.06-upstream_fixes-1.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.xz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R


	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --sbindir=/sbin --with-platform=pc --disable-efiemu --disable-werror "

	patch -Np1 -i $XGPATH_SOURCE/grub-2.06-upstream_fixes-1.patch

	unset {C,CPP,CXX,LD}FLAGS

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG


}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}


#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install failed."

	mkdir -p $XGPATH_DEST/usr/share/bash-completion/completions
	mv -v $XGPATH_DEST/etc/bash_completion.d/grub $XGPATH_DEST/usr/share/bash-completion/completions
	echo "done"
}


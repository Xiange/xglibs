#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="creating graphical user interfaces for applications"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.gtk.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://ftp.gnome.org/pub/gnome/sources/gtk+/3.24/gtk+-$V.tar.xz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="at-spi2-atk gdk-pixbuf pango libepoxy"

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd gtk+-$V$R
	#err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --enable-broadway-backend \
		--enable-x11-backend  --enable-wayland-backend "

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "insall $N-$V failed."

	mkdir -p $XGPATH_DEST/etc
 	touch $XGPATH_DEST/etc/gtk-3.0/settings.ini
cat > $XGPATH_DEST/etc/gtk-3.0/settings.ini << "EOF"
[Settings]
gtk-theme-name = Adwaita
gtk-icon-theme-name = Adwaita
gtk-font-name = DejaVu Sans 12
gtk-cursor-theme-size = 18
gtk-xft-antialias = 1
gtk-xft-hinting = 1
gtk-xft-hintstyle = hintslight
gtk-xft-rgba = rgb
gtk-cursor-theme-name = Adwaita
EOF
}

#post install
xgb_postinst()
{
	echo "running after package installed..."

	gtk-query-immodules-3.0 --update-cache
	glib-compile-schemas /usr/share/glib-2.0/schemas
	echo "done"
}


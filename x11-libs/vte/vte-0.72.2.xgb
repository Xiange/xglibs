#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Terminal emulator widget used by Xiange Linux"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://github.com/GNOME/vte"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://github.com/GNOME/vte/archive/$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V
	err_check "enter source failed"

	mkdir build
	cd build
	err_check "enter build failed"


	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --buildtype=release -Dgir=false -Dvapi=false "

	#Third, call configure with $XGB_CONFIG
	meson $XGB_CONFIG ..
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	ninja
}

xgb_check()
{
	echo "check $N-$V$R..."

	#run make in current directory
	#make check
	echo "Done"
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	DESTDIR=$XGPATH_DEST ninja install
	err_check "install failed"

	#remove cshell
	rm -rf $XGPATH_DEST/etc/profile.d/vte.csh
}


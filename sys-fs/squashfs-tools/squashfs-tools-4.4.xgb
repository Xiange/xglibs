#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Tool for creating compressed filesystem type squashfs"


# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="https://sourceforge.net/projects/squashfs"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://downloads.sourceforge.net/project/squashfs/squashfs/squashfs$V/squashfs$V.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#init 
xgb_init()
{
	echo "init $N-$V$R build script..."
}

#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/squashfs$V.tar.gz
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd squashfs$V/squashfs-tools
	err_check "enter directory failed."

	#patch for glibc 2.8
	sed -i "/#include <ctype.h>/a#include <sys/sysmacros.h>" mksquashfs.c 
	err_check "patch failed"

	sed -i "/#include <ctype.h>/a#include <sys/sysmacros.h>" unsquashfs.c 
	err_check "patch 2 failed"

	sed -i "s@^struct cache@extern struct cache@g" mksquashfs.h
	err_check "patch 2 failed"

}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE XZ_SUPPORT=1 LZO_SUPPORT=1 COMP_DEFAULT=xz INSTALL_DIR=/usr/bin

}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	mkdir -p $XGPATH_DEST/usr/bin
	err_check "install 1 failed."

	install -m 0755 mksquashfs $XGPATH_DEST/usr/bin
	err_check "install 2 failed."

	install -m 0755 unsquashfs $XGPATH_DEST/usr/bin
	err_check "install 3 failed."
}


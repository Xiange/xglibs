#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="QEMU + Kernel-based Virtual Machine userland tools"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.linux-kvm.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="https://download.qemu.org/qemu-$V.tar.xz"

# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND="libaio"

# Build time depend
DEPEND="${RDEPEND}"




#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xaf $XGPATH_SOURCE/$(basename $SRC_URI)
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd qemu-$V$R
	#err_check "enter directory failed."

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc --enable-kvm --enable-linux-aio --enable-modules \
		--audio-drv-list=pa --enable-lzo  --disable-attr --enable-gtk --disable-sdl \
		--enable-virglrenderer --enable-slirp "

	XGB_CONFIG+='--target-list=arm-softmmu,i386-softmmu,x86_64-softmmu,i386-linux-user,x86_64-linux-user'
	
	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG 
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "Install failed."
}


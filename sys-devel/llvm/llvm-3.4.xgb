#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="a collection of modular and reusable compiler and toolchain technologies."

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://llvm.org/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://llvm.org/releases/$V/llvm-$V.src.tar.gz \
http://llvm.org/releases/$V/clang-$V.src.tar.gz \
http://llvm.org/releases/$V/compiler-rt-$V.src.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V.src.tar.gz
	err_check "uncompress llvm failed."

}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	err_check "enter directory failed."

	tar xf $XGPATH_SOURCE/clang-$V.src.tar.gz -C tools &&
	err_check "uncompress clang failed."

	tar xf $XGPATH_SOURCE/compiler-rt-$V.src.tar.gz -C projects &&
	err_check "uncompress compiler-rt failed."

	mv tools/clang-$V tools/clang &&
	mv projects/compiler-rt-$V projects/compiler-rt
	err_check "rename failed."



	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --sysconfdir=/etc    \
			--docdir=/usr/share/doc/llvm-$V \
            --enable-libffi            \
            --enable-optimized         \
            --enable-shared            \
            --disable-assertions "

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make $XGPARA_MAKE
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	#make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
}

